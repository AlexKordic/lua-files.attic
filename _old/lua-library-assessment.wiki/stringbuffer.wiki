#sidebar GlueSidebar
==`stringbuffer() -> buf`==

*String buffer pattern for efficient string concatenation.*

{{{
buf = stringbuffer()

buf'tachycardia'
buf'toxoplasmosis'
buf'thyrotoxicosis'

print(buf())

> tachycardiatoxoplasmosisthyrotoxicosis

}}}

*`buf(s)`*<br>
*`buf:add(s)`*<br>
Add a string to the buffer. The short form can be used in situations when a consumer function is expected.

*`buf() -> s`*<br>
*`buf:get() -> s`*<br>
Get the contents of the buffer (that is, the concatenation of all the pieces).

*`buf:clear()`*<br>
Clear up the buffer for reuse. Recreating the buffer has the same effect but you might have other references to it that you don't want to reassign.

*`buf:reset([s]) -> s`*<br>
Return the buffer contents and clear the buffer, optionally adding a string to it if provided.

*`buf.len -> n`*<br>
The length of the buffer (the sum of the lengths of the pieces).

*Hint:* The buffer pieces are stored in the array part of the buffer object which you can iterate with `ipairs`, concatenate with `concat` (in case you want to concatenate with a separator), and you can use `#buf` to get the number of pieces.